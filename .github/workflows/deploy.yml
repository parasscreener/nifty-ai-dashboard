name: Deploy to Streamlit Cloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 9:30 AM IST (4:00 AM UTC) for market data updates
    - cron: '0 4 * * 1-5'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest streamlit

    - name: Test data pipeline
      run: |
        python -c "
import yfinance as yf
import pandas as pd
import numpy as np
print('Testing data fetch...')
try:
    data = yf.download('^NSEI', period='5d')
    print(f'Data shape: {data.shape}')
    print('Data fetch successful')
except Exception as e:
    print(f'Data fetch failed: {e}')
    print('Will use sample data in production')
"

    - name: Test Streamlit app syntax
      run: |
        python -m py_compile app.py
        echo "✅ App syntax is valid"

    - name: Test imports
      run: |
        python -c "
import streamlit as st
import pandas as pd
import numpy as np
import plotly.graph_objects as go
import yfinance as yf
import sklearn
print('✅ All imports successful')
"

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deployment Status
      run: |
        echo "🚀 Deployment to Streamlit Community Cloud"
        echo "📊 Dashboard will auto-update on successful merge to main"
        echo "🔗 Access at: https://share.streamlit.io/yourusername/nifty-ai-dashboard"
        echo "⏱️  Expected deployment time: 2-3 minutes"

    - name: Update deployment timestamp
      run: |
        echo "Deployment completed at: $(date)" >> deployment.log
        echo "Commit SHA: $GITHUB_SHA" >> deployment.log

  market-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install yfinance pandas numpy

    - name: Update market data cache
      run: |
        python -c "
import yfinance as yf
import pickle
from datetime import datetime

print('🔄 Updating market data cache...')
try:
    # Fetch latest Nifty data
    nifty = yf.download('^NSEI', period='1y')

    # Cache data
    cache_data = {
        'data': nifty,
        'updated_at': datetime.now(),
        'status': 'success'
    }

    with open('market_cache.pkl', 'wb') as f:
        pickle.dump(cache_data, f)

    print(f'✅ Market data updated: {len(nifty)} records')
    print(f'Latest close: ₹{nifty.Close.iloc[-1]:.2f}')

except Exception as e:
    print(f'❌ Market data update failed: {e}')
"

    - name: Commit updated cache
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --staged --quiet || git commit -m "🔄 Auto-update market data cache [skip ci]"
        git push
